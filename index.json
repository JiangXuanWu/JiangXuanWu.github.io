[{"categories":["Manjaro"],"content":"Manjaro KDE 配置优化 ","date":"2021-05-09","objectID":"/posts/ManjaroLayout2021129/:1:0","tags":["Manjaro"],"title":"Manjaro配置","uri":"/posts/ManjaroLayout2021129/"},{"categories":["Manjaro"],"content":"用于镜像测速，尾部的5可置换为10 sudo pacman-mirrors --fasttrack 5 ","date":"2021-05-09","objectID":"/posts/ManjaroLayout2021129/:1:1","tags":["Manjaro"],"title":"Manjaro配置","uri":"/posts/ManjaroLayout2021129/"},{"categories":["Manjaro"],"content":"检查镜像的上次同步状态/状态（与网页相同） pacman-mirrors --status Local mirror status for stable branch 稳定分支的本地镜像状态 ","date":"2021-05-09","objectID":"/posts/ManjaroLayout2021129/:1:2","tags":["Manjaro"],"title":"Manjaro配置","uri":"/posts/ManjaroLayout2021129/"},{"categories":["Manjaro"],"content":"安装Java arch官方维护的openjdk sudo pacman -S jdk-openjdk source /etc/profile ","date":"2021-05-09","objectID":"/posts/ManjaroLayout2021129/:1:3","tags":["Manjaro"],"title":"Manjaro配置","uri":"/posts/ManjaroLayout2021129/"},{"categories":["Manjaro"],"content":"科学上网 我个人使用的是StrongVPN。 Command Line官网步骤。 在Manjaro KDE上，GUI是连不上的，故此需要使用Command Line(命令行)。 前期工作（以下摘自Jonny）： 安装解包工具 yay -S debtap 配置debtap软件源 kate /usr/bin/debtap 把里面的 http://ftp.debian.org/debian/dists 替换成 https://mirrors.ustc.edu.cn/debian/dists 把 http://archive.ubuntu.com/ubuntu/dists 替换成 https://mirrors.ustc.edu.cn/ubuntu/dists 之后运行下面命令更新一遍 sudo debtap -u 以后安装 deb 文件，先到 deb 包的路径下打开终端（右键“在此处打开终端”），然后运行如下指令，“xxx.deb”就更换成包的文件名。 debtap xxxx.deb 然后运行下面的指令安装，“x.tar.xz”就是拆包之后的一个文件名。 sudo pacman -U x.tar.xz 中期工作： 进入此链接，找到对应自己位数的版本（指64位或者32位）。 之后选择后缀为.deb的链接进入，进入后下载对应文件（openvpn_2.4.8）。 之后，点击此链接，下载lsb-base，使用前期工作的步骤进行安装。 在安装完成后，安装openvpn，并将其添加到更新忽略列表中。 最后工作： 检查系统中是否有openvpn@strongvpn.service服务 sudo systemctl status openvpn@strongvpn.service 有，则启动 sudo systemctl start openvpn@strongvpn.service 没有，则需要检查是否漏掉了某些步骤。 加入自启动 sudo systemctl enable openvpn@strongvpn.service # enabled 取消自启动 sudo systemctl disable openvpn@strongvpn.service # enabled-runtime 检查自启动 sudo systemctl is-enabled openvpn@strongvpn.service ","date":"2021-05-09","objectID":"/posts/ManjaroLayout2021129/:1:4","tags":["Manjaro"],"title":"Manjaro配置","uri":"/posts/ManjaroLayout2021129/"},{"categories":["Manjaro"],"content":"软件安装 # google-chrome yay -Sy google-chrome # typora yay -Sy typora #code：开源实现“The Open Source build of Visual Studio Code (vscode) editor” sudo pacman -Sy code ","date":"2021-05-09","objectID":"/posts/ManjaroLayout2021129/:1:5","tags":["Manjaro"],"title":"Manjaro配置","uri":"/posts/ManjaroLayout2021129/"},{"categories":[],"content":"前言 yarn ","date":"2021-03-02","objectID":"/posts/AcquaintanceOfVue202161/:1:0","tags":[],"title":"Vue学习","uri":"/posts/AcquaintanceOfVue202161/"},{"categories":[],"content":"通过 Chocolatey 安装 Chocolatey 是一个 Windows 专用的软件包管理工具。 请按照此 说明 安装 Chocolatey 。 安装 Chocolatey 之后，你就可以在控制台执行如下命令安装 Yarn 了： choco install yarn 这也会确保你安装了 Node.js 。 ","date":"2021-03-02","objectID":"/posts/AcquaintanceOfVue202161/:1:1","tags":[],"title":"Vue学习","uri":"/posts/AcquaintanceOfVue202161/"},{"categories":[],"content":"通过 Scoop 安装 Scoop 是一个用于 Windows 的基于命令行的安装工具。 请按照此 说明 安装 Scoop 。 Scoop 安装后，你就可以在控制台执行如下命令安装 Yarn 了： scoop install yarn 如果 Node.js 未被安装，scoop 会提示你安装。 例如： scoop install nodejs ","date":"2021-03-02","objectID":"/posts/AcquaintanceOfVue202161/:1:2","tags":[],"title":"Vue学习","uri":"/posts/AcquaintanceOfVue202161/"},{"categories":[],"content":"注意 请将您的项目目录和 Yarn 的缓存目录 (%LocalAppData%\\Yarn) 列入杀毒软件的白名单中，否则会因为每次向磁盘写入文件时而被扫描，导致安装软件包变得很慢。 通过如下命令测试 Yarn 是否安装成功： yarn --version ","date":"2021-03-02","objectID":"/posts/AcquaintanceOfVue202161/:1:3","tags":[],"title":"Vue学习","uri":"/posts/AcquaintanceOfVue202161/"},{"categories":[],"content":"Vue开发环境搭建 Vite 是一个 web 开发构建工具，由于其原生 ES 模块导入方式，可以实现闪电般的冷服务器启动。 通过在终端中运行以下命令，可以使用 Vite 快速构建 Vue 项目。 使用 npm： npm init @vitejs/app \u003cproject-name\u003e cd \u003cproject-name\u003e npm install npm run dev 或者 yarn： yarn create @vitejs/app \u003cproject-name\u003e cd \u003cproject-name\u003e yarn //安装环境(node_modules) yarn dev 当你的用户名中间带有空格时（如：Mike Baker），可能导致Vite生成不成功。以下代码： create-vite-app \u003cproject-name\u003e ","date":"2021-03-02","objectID":"/posts/AcquaintanceOfVue202161/:2:0","tags":[],"title":"Vue学习","uri":"/posts/AcquaintanceOfVue202161/"},{"categories":[],"content":"React开发环境搭建 npm init @vitejs/app --template react yarn //安装环境 yarn dev vue的编译服务器由koa写的。 ","date":"2021-03-02","objectID":"/posts/AcquaintanceOfVue202161/:2:1","tags":[],"title":"Vue学习","uri":"/posts/AcquaintanceOfVue202161/"},{"categories":[],"content":"第三种方式搭建[Vite搭建外部编译服务] 1. 克隆，自动生成文件夹vite git clone https://github.com/vitejs/vite.git 2. 安装依赖 yarn 或者 npm install 3. 第一次打包[让整个文件夹下项目打包]，生成一个dist目录 yarn build yarn link //成功显示success 1. 项目文件夹下，生成package.json npm init -y 2. 链接vite yarn link vite //成功显示success ","date":"2021-03-02","objectID":"/posts/AcquaintanceOfVue202161/:2:2","tags":[],"title":"Vue学习","uri":"/posts/AcquaintanceOfVue202161/"},{"categories":[],"content":" 一定要坚持，要保持长时间学习，甚至终生学习的态度。 一定要动手，不管例子多么简单，建议至少自己动手敲一遍看看是否理解了里头的细枝末节。 一定要学会思考，思考为什么要这样，而不是那样。还要举一反三地思考。 不要乱买书，不要乱追求新技术新名词，基础的东西经过很长时间积累，会在未来至少10年通用。 回顾一下历史，看看历史时间线上技术的发展，你才能明白明天会是什么样的。 ","date":"2021-02-19","objectID":"/posts/StudySuggestions202150/:0:0","tags":[],"title":"摘录","uri":"/posts/StudySuggestions202150/"},{"categories":[],"content":"这是网站的第一篇文章，历时半个多月，参阅了很多大佬的文章，感谢各位大佬的分享的优质资源。 链接汇总： 雨临Lewis 米格论文 就是这个范儿 公子 Hugo部署到Github Ahrisy の 碎碎念 回忆中的明天 南岩666のBlog 少数派 LoveIt主题中文demo Shuzang’s Blog 小林书架 风月 hugo博客添加评论系统Valine 为什么你没授权就能用大大的作品？？—“知识共享”（CC协议）简单介绍 creativecommons许可协议 code show的博客 友链添加 至此，本站终于建站成功！ 关于首页头像点击后会跳转到Posts下，办法是： 将themes/LoveIt/layouts/partials/home/目录下的profile.html复制到根目录[指：网站根目录]下的对应位置，将文件中的 \u003ca href=\"{{ $url }}\"{{ with .Title | default .Name }} title=\"{{ . }}\"{{ end }}{{ if (urls.Parse $url).Host }} rel=\"noopener noreffer\" target=\"_blank\"{{ end }}\u003e {{- dict \"Src\" $avatar | partial \"plugin/image.html\" -}} \u003c/a\u003e 中的代码修改为 \u003ca\u003e {{- dict \"Src\" $avatar | partial \"plugin/image.html\" -}} \u003c/a\u003e 之后鼠标再滑动到这时，就不会变成手掌点击模样了。 ","date":"2021-02-19","objectID":"/posts/hugo202150/:0:0","tags":[],"title":"建站","uri":"/posts/hugo202150/"}]